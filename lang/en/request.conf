{
  notFoundError {
    include "embeds/userError.conf"
    title = "Request not found"
    footer = {
      text = "Searched: \"%id%\""
    }
  }

  empty: "‚ùå You You don't have any published offers."

  parentCommand {
    name = "requests"
    description = "Manage your current requests."
  }

  info {
    linkButton {
      label = "Go"
      emoji = "üëÅ"
    }
    command {
      name = "info"
      description = "View information about a request"

      options {
        request {
          name = "request"
          description = "Request to review"
        }
      }
    }
  }

  create {
    command {
      name = "request"
      description = "Request a service"
    }

    modal {
      title = "Creating a request"

      fields {
        title {
          label = "Title"
          placeholder = "I need a server configurator"
        }
        description {
          label = "Description"
          placeholder = "I need someone who can configurate EssentialsX"
        }
        budget {
          label = "Budget (With payment)"
          placeholder = "10 USD"
        }
      }
    }

    tagSelect {
      placeholder = "üè∑ Select a tag"
      options {
        tag {
          label = "%tag_name%"
          description = "%tag_description%"
        }
      }
    }

    previewing {
      title = "üëÅÔ∏è Request preview"
      color = "#26a6d1"
    }

    success {
      include "embeds/success.conf"
      message = "Request created successfully"
    }

    error {
      user {
        include "embeds/userError.conf"
        title = "Error while creating the request"
      }
      log {
        include "embeds/logError.conf"
        title = "Error while creating a request"
      }
    }

    requirements {
      deny {
        include "embeds/deny.conf"

        title = "Missing requirements"
        description = "You cannot publish the request because you do not meet the following requirements:"

        fieldsTemplate {
          name = "%missingRequirement_name%"
          value = "%missingRequirement_description%"
          inline = true
        }
      }
      warn {
        include "embeds/warn.conf"

        description = "Please review the following warnings before posting:"

        fieldsTemplate {
          name = "%missingRequirement_name%"
          value = "%missingRequirement_description%"
          inline = true
        }
      }
    }
  }

  repost {
    requirements {
      deny {
        include "embeds/deny.conf"

        description = "You cannot republish the request because you do not meet the following requirements:"

        fieldsTemplate {
          name = "%missingRequirement_name%"
          value = "%missingRequirement_description%"
          inline = true
        }
      }

      warn {
        include "embeds/warn.conf"

        description = "Please review the following warnings before reposting:"

        fieldsTemplate {
          name = "%missingRequirement_name%"
          value = "%missingRequirement_description%"
          inline = true
        }
      }

      confirm {
        include "embeds/confirm.conf"
        title = "Are you sure you want to repost this request?"
      }
    }

    command {
      name = "repost"
      description = "Repost a request"

      options {
        request {
          name = "request"
          description = "Request to repost"
        }
      }
    }

    button {
      label = "Repost"
      style = "Primary"
      emoji = "üîÅ"
    }

    error {
      user {
        include "embeds/userError.conf"
        title = "Error while trying to repost the request"
      }
      log {
        include "embeds/logError.conf"
        title = "Error while trying to repost a request"
      }
    }

    success {
      include "embeds/success.conf"
      message = "Request reposted successfully"
    }
  }

  update {
    requirements {
      deny {
        include "embeds/deny.conf"
        title = "Missing requirements"
        description = "You cannot update the request because you do not meet the following requirements:"
        fieldsTemplate {
          name = "%missingRequirement_name%"
          value = "%missingRequirement_description%"
          inline = true
        }
      }
      warn {
        include "embeds/warn.conf"
        description = "Please review the following warnings before posting:"
        fieldsTemplate {
          name = "%missingRequirement_name%"
          value = "%missingRequirement_description%"
          inline = true
        }
      }
      confirm {
        include "embeds/confirm.conf"
        title = "Are you sure you want to update this request?"
      }
    }

    command {
      name = "update"
      description = "Update a request"

      options {
        request {
          name = "request"
          description = "Request to update"
        }
      }
    }

    success {
      include "embeds/success.conf"
      message = "Request updated successfully"
    }

    error {
      user {
        include "embeds/userError.conf"
        title = "Error while updating the request"
      }
      log {
        include "embeds/logError.conf"
        title = "Error while updating a request"
      }
    }

    previewing {
      include "embeds/preview.conf"
      title = "üëÅÔ∏è Preview of the new request"
      footer = {
        text = "Updating the request does not republish it, it simply edits it."
      }
    }

    log {
      author {
        name = "Updated by %update_updater_name%"
        icon = "%update_updater_avatar%"
      }

      title = "Request updated. Showing old and new:"
      color = "#d7a82d"

      footer = {
        text = "Created by %update_affected_name%"
        icon = "%update_affected_avatar%"
      }
    }
  }

  post {
    title = "%request_title%"
    description = "%request_description%"
    thumbnail = "%request_thumbnail%"
    image = "%request_image%"
    color = "#d7a82d"

    fields: [
      {
        name = "üíµ  Budget"
        value = """
```cpp
%request_budget%
```
        """
        inline = false
      }
      {
        name = "üé´ Tag"
        value = "%request_tag_name%"
        inline = true
      }

      {
        name = "üì∂ Contact"
        value = """
* %request_user_mention%
* `%request_user_tag%`
"""
        inline = true
      }
    ]

    footer {
      text = "ID: %request_id%"
    }

    author {
      name = "%request_user_name% requests:"
      icon = "%request_user_avatar%"
    }
  }

  delete {
    command {
      name = "delete"
      description = "Delete a request"
      options {
        request {
          name = "request"
          description = "Request to delete"
        }
      }
    }

    error {
      user {
        include "embeds/userError.conf"
        title = "Error while deleting the request"
      }
      log {
        include "embeds/logError.conf"
        title = "Error while deleting a request"
      }
    }

    success {
      include "embeds/success.conf"
      message = "Request deleted successfully"
    }

    confirm {
      include "embeds/confirm.conf"
      title = "Are you sure you want to delete this request?"
    }

    log {
      author {
        name = "Deleted by %update_updater_name%"
        icon = "%update_updater_avatar%"
      }

      title = "Request deleted:"
      color = "#d7a82d"

      footer = {
        text = "Created by %update_affected_name%"
        icon = "%update_affected_avatar%"
      }
    }
  }

  stickyMessage {
    title = "Requests Channel"
    description = """
Welcome to the Requests Channel! Here you can see what services people are currently requesting.

- **Create a request**: Use %command_request%.
- **Update a request**: Use %command_requests:update%.
- **Delete a request**: Use %command_requests:delete%.
- **View request information**: Use %command_requests:info%.
"""

    color = "#d7a82d"
    thumbnail = "%member_avatar%"
  }

  search {
    command {
      name = "search"
      description = "Search server requests"
    }
    error {
      user {
        include "embeds/userError.conf"
        title = "There was an error while searching for requests"
      }
      log {
        include "embeds/logError.conf"
        title = "There was an error while searching for requests"
      }
    }
    embed {
      title = "üîç Search results"
      color = "#5bc0eb"
      fieldsTemplate {
        name = "%request_title%"
        value = """
`üë§` %request_user_mention% - `%request_user_username%`
`üíµ` %request_budget%
`üëÄ` __**[See message](%request_url%)**__
"""
      }
    }
    noResults = "No results were found that match your query."
  }
}
